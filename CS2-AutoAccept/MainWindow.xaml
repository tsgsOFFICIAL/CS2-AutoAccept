<Window x:Class="CS2_AutoAccept.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="CS2_AutoAccept"
        mc:Ignorable="d"
        Title="CS2 AutoAccept by tsgsOFFICIAL" Height="450" Width="800"
        ResizeMode="CanResize"
        WindowStyle="None"
        MinWidth="800"
        MinHeight="450"
        Background="#353535">

    <!-- Window resrouces -->
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF0000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="Buttons.MouseOver.Background" Color="#2b2a2a"/>
        <Style x:Key="NavButtons" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Buttons.MouseOver.Background}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Buttons.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseBtn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Disable stretching of the window, while allowing it to be minimized from the tabbar -->
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="1" ResizeBorderThickness="5" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <Grid>        
        <!-- Background -->
        <Grid.Background>
            <ImageBrush ImageSource="/background.png"></ImageBrush>
        </Grid.Background>

        <!-- Column & Row Definitions -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="92*"/>
        </Grid.RowDefinitions>

        <!-- Custom header -->
        <StackPanel Background="#1c1b1b" MouseLeftButtonDown="WindowHeader_Mousedown" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <Image Source="/logo.png" MouseLeftButtonDown="WindowHeader_Mousedown" HorizontalAlignment="Left"/>
            <StackPanel Margin="3.3,0,0,0" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock Text="CS2 AutoAccept" FontFamily="Roboto" Foreground="GhostWhite" MouseLeftButtonDown="WindowHeader_Mousedown"/>
                <TextBlock Text="by tsgsOFFICIAL" FontFamily="Roboto" Foreground="GhostWhite" MouseLeftButtonDown="WindowHeader_Mousedown"/>
            </StackPanel>

            <Button Background="Transparent" x:Name="Button_Update" Click="Button_Update_Click" Margin="20, 0, 0, 0" BorderThickness="0" FontFamily="Roboto" FontSize="15" Foreground="GhostWhite" FontWeight="SemiBold" Cursor="Hand" Style="{DynamicResource NavButtons}"/>
        </StackPanel>

        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Name="Min_btn" Background="Transparent" Content="&#x1F5D5;" ToolTip="Minimize" Click="Button_Click_Minimize" Foreground="GhostWhite" BorderBrush="Transparent" Style="{DynamicResource NavButtons}" Height="Auto" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" FontSize="18"/>
            <Button x:Name="Maximize_Button" Background="Transparent" Content="&#x1F5D6;" ToolTip="Maximize" Click="Button_Click_Maximize" Foreground="GhostWhite" BorderBrush="Transparent" Style="{DynamicResource NavButtons}" Height="Auto" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" FontSize="18"/>
            <Button Name="X_btn" Background="Transparent" Content="&#10006;" ToolTip="Close" Click="Button_Click_Close" Foreground="GhostWhite" BorderBrush="Transparent" Style="{DynamicResource CloseBtn}" Height="Auto" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        </StackPanel>

        <!-- Controls -->
        <StackPanel Grid.Row="1">
            <StackPanel.Resources>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="10, 15, 0, 0"/>
                </Style>
            </StackPanel.Resources>

            <CheckBox x:Name="Program_state" Content="AutoAccept (OFF)" ToolTip="Will find the ACCEPT button, only for the current match" IsChecked="False"  Foreground="Red" FontWeight="Bold" Checked="Program_state_Checked" Unchecked="Program_state_Unchecked"/>
            <CheckBox x:Name="Run_at_startup_state" Content="Run at startup (OFF)" ToolTip="Automatically start this app when your pc launches" IsChecked="False" Foreground="Red" FontWeight="Bold" Checked="Run_at_startup_state_Checked" Unchecked="Run_at_startup_state_Unchecked"/>
            <CheckBox x:Name="Program_state_continuously" Content="Auto Accept Every Match (OFF)" ToolTip="Will find the ACCEPT button for all matches, this will consume more cpu power while in game!" IsChecked="False" Foreground="Red" FontWeight="Bold" Checked="Program_state_continuously_Checked" Unchecked="Program_state_continuously_Unchecked"/>
        </StackPanel>

        <StackPanel Grid.Row="1" VerticalAlignment="Bottom">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="10, 0, 0, 15"/>
                </Style>
            </StackPanel.Resources>

            <TextBlock x:Name="TextBlock_Monitor" FontFamily="Roboto" FontSize="16" Foreground="GhostWhite"/>
            <TextBlock x:Name="TextBlock_MonitorSize" FontFamily="Roboto" FontSize="16" Foreground="GhostWhite"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center">
            <TextBlock x:Name="TextBlock_Progress" FontFamily="Roboto" FontSize="16" Foreground="GhostWhite" TextAlignment="Center" Visibility="Collapsed"/>
            <ProgressBar x:Name="Progress_Download" HorizontalAlignment="Left" Height="30" Width="457" Visibility="Collapsed"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="0, 0, 10, 10">
            <Button x:Name="Button_LaunchCS" FontFamily="Roboto" FontSize="24" Foreground="GhostWhite" Content="Launch CS2" Cursor="Hand" ToolTip="Click here to launch CS2" Background="#3F169C80" Click="Button_Click_LaunchCS2" BorderThickness="0" Width="{Binding Path=ActualWidth, ElementName=Button_Discord}" Height="{Binding Path=ActualHeight, ElementName=Button_Discord}">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
            </Button>

            <!-- Socials -->
            <TextBlock Text="Join the Discord!" FontFamily="Roboto" FontSize="24" Foreground="GhostWhite" TextAlignment="Center"/>
            <Button x:Name="Button_Discord" Background="#FF7289DA" Cursor="Hand" Click="Button_Click_Discord" ToolTip="Join my Discord server, its a great place for asking questions and hanging out :)" BorderThickness="0">
                <Image Source="/Discord white.png"/>

                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
            </Button>
        </StackPanel>

        <!-- NotifyIcon, that minimizes to system tray -->
        <tb:TaskbarIcon x:Name="MyNotifyIcon" IconSource="/logo.png" ToolTipText="CS2 AutoAccept by tsgsOFFICIAL" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Visibility="Collapsed">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Minimize" Command="{Binding ToggleWindowCommand }" />
                    <MenuItem Header="Exit" Command="{Binding CloseCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window>